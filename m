Return-Path: <linux-kernel+bounces-297779-lists+linux-kernel=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from sv.mirrors.kernel.org (sv.mirrors.kernel.org [139.178.88.99])
	by mail.lfdr.de (Postfix) with ESMTPS id 94D1C95BDA6
	for <lists+linux-kernel@lfdr.de>; Thu, 22 Aug 2024 19:45:18 +0200 (CEST)
Received: from smtp.subspace.kernel.org (wormhole.subspace.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by sv.mirrors.kernel.org (Postfix) with ESMTPS id 28F6E285C4A
	for <lists+linux-kernel@lfdr.de>; Thu, 22 Aug 2024 17:45:17 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 806841CF2BB;
	Thu, 22 Aug 2024 17:44:12 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="reLLsGSg"
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id BF1A21CEAC8;
	Thu, 22 Aug 2024 17:44:11 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1724348651; cv=none; b=I16fMfLnj5weDmCCPt8it+w+szEVXZM6y0upUal5bWiIue1BKPOOb3sw1UIbbHQDGXZb3YW4Xql29/Q3PbTxxYkjI8DqDIBmhsalBVcBfCrY1iLeOsn5rlqYj1jzcymhLiQaWZjilI9L8taTZP6Xfbt7se6bc9LD3BiSVGgaCHA=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1724348651; c=relaxed/simple;
	bh=cegSBI2AjOyPEuaaHuikZeuINmD27Fy73BpZBPzkNzk=;
	h=Date:Message-ID:From:To:Cc:Subject:In-Reply-To:References:
	 MIME-Version:Content-Type; b=JhMrdAY1LKsmQa+SeQ4L+PCIK8tarla/PHhr/WUfup8JJM1NrsV1iquZLzXs8JexC4C/wEOBYKdOkpm58kauBeWl4LdXKfTWnAR9ayGLSXaXjigsJlVumBNXN+gshDnDFX/afOzkDP/ZNG+hQXx3dRu3u8wHQjMjevjdVk61hXs=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=reLLsGSg; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 4A86DC32782;
	Thu, 22 Aug 2024 17:44:11 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1724348651;
	bh=cegSBI2AjOyPEuaaHuikZeuINmD27Fy73BpZBPzkNzk=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=reLLsGSgLLs9TbINYoQ7LtSZaGtIDLxQS/W9uDxZHFpbsxthQyuvo/ybpUdkqcTcm
	 izWOtRUbKQOcbSvOa0zEdRGk6h8KQrak5UHPyEYUmmpAm7dllRgPVgxZY4hvlhetJz
	 2Pjk3gMCGXWNyiBD1Q8Xydue9JDyBA2VsqUsaaAXn38SQuOwz7S6AfOs1ERU/CLNic
	 N8mGvsKnRbAZm0jurtQRG/nxjYBZduwrWFaA4ZSv5rIS/FKsoua6ha3W11YLgHVY6n
	 d6UoVhJnvYuXyVH7Bhrm/mgkFa7+5Uxgmi36NoanIT9pdsrq6r5C0YRVLRWdJZTU+R
	 cOrB8Ik/QcFQA==
Received: from sofa.misterjones.org ([185.219.108.64] helo=goblin-girl.misterjones.org)
	by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	(Exim 4.95)
	(envelope-from <maz@kernel.org>)
	id 1shBqz-0062ae-4E;
	Thu, 22 Aug 2024 18:44:09 +0100
Date: Thu, 22 Aug 2024 18:44:08 +0100
Message-ID: <861q2gxxjr.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Mark Brown <broonie@kernel.org>
Cc: Oliver Upton <oliver.upton@linux.dev>,
	James Morse <james.morse@arm.com>,
	Suzuki K Poulose <suzuki.poulose@arm.com>,
	Catalin Marinas <catalin.marinas@arm.com>,
	Will Deacon <will@kernel.org>,
	Joey Gouly <joey.gouly@arm.com>,
	linux-arm-kernel@lists.infradead.org,
	kvmarm@lists.linux.dev,
	linux-kernel@vger.kernel.org
Subject: Re: [PATCH 0/2] KVM: arm64: Control visibility of S1PIE related sysregs to userspace
In-Reply-To: <ZsdZohZhre-fRmUv@finisterre.sirena.org.uk>
References: <20240821-kvm-arm64-hide-pie-regs-v1-0-08cb3c79cb57@kernel.org>
	<86ed6ixa32.wl-maz@kernel.org>
	<e123ee24-2a0c-4ab3-8dc3-2906bf96f38d@sirena.org.uk>
	<86cym2x7cv.wl-maz@kernel.org>
	<5304749b-04c8-44f4-b4de-b2d0cef61169@sirena.org.uk>
	<86bk1lygm1.wl-maz@kernel.org>
	<ZsdZohZhre-fRmUv@finisterre.sirena.org.uk>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/29.4
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: broonie@kernel.org, oliver.upton@linux.dev, james.morse@arm.com, suzuki.poulose@arm.com, catalin.marinas@arm.com, will@kernel.org, joey.gouly@arm.com, linux-arm-kernel@lists.infradead.org, kvmarm@lists.linux.dev, linux-kernel@vger.kernel.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

On Thu, 22 Aug 2024 16:30:42 +0100,
Mark Brown <broonie@kernel.org> wrote:
> 
> [1  <text/plain; us-ascii (quoted-printable)>]
> On Wed, Aug 21, 2024 at 05:40:06PM +0100, Marc Zyngier wrote:
> > Mark Brown <broonie@kernel.org> wrote:
> 
> > > Indeed, I was wondering about just adding a description of the relevant
> > > ID register field to the sys_regs table.
> 
> > You'd need more than that.
> 
> > How would you express the visibility of TCR2_EL2? It depends on both
> > ID_AA64PFR0_EL1.EL2==1 *and* ID_AA64MMFR3_EL1.TCRX==1. So it cannot be
> > just a single tuple { idreg, field, value }. It needs to be an
> > arbitrary conjunction of those.
> 
> I haven't done an audit for fun cases to see how viable things are, for
> the EL2 cases I'd just have an encoding based check for EL2 rather than
> explicitly enumerating the ID register for each EL2.  That seemed
> quicker and less error prone.

Sure, you can do that. Or rather, you can do that *right now*. But
that's not what the architecture says (there is no statement saying
that Op1==4 for an EL2 register). So the forward-looking way to do it
is to match the full encoding of a register against the properties
that define its existence.  Anything else is a short lived hack, and I
don't care much for them.

But a simple way to deal with that is to encode a property that checks
a vcpu creation property (EL2, PAuth...).

> 
> The other cases I'm aware of are more along the lines of features
> restricting the values other features/idregs can have (eg, for SME the
> information in ID_AA64PFR1_EL1.SME can also be gleaned from
> ID_AA64SMFR0_EL1.SMEver).

Well, they don't quite advertise the same thing. If you decode the
feature specification, you get:

(FEAT_SME <-> (AArch64 ID_AA64PFR1_EL1.SME >= 1))
(FEAT_SME2 --> (AArch64 ID_AA64SMFR0_EL1.SMEver >= 1))
(FEAT_SME2 --> (AArch64 ID_AA64PFR1_EL1.SME >= 2))
(((AArch64 ID_AA64SMFR0_EL1.SMEver >= 1) || (AArch64 ID_AA64PFR1_EL1.SME >= 2)) --> FEAT_SME2)
(FEAT_SME2p1 <-> (AArch64 ID_AA64SMFR0_EL1.SMEver >= 2))

So SME isn't really advertised in SMEver, SME2 is advertised in both
(and it is enough that one advertises SME2 for the feature to be
present), and SME2p1 is only advertised in SMEver.

That's what we need to implement. Yes, this part of the architecture
is... interesting.

> For those I'm not sure if visibility checks
> are the best approach, if we should audit the registers when starting
> the guest to make sure they're self consistent or if we should just pick
> the most directly relevant register and rely on userspace to enforce
> consistancy.

We definitely rely on userspace to enforce consistency. If userspace
messes up, it's "garbage in, garbage out".

We enforce the sysregs visible by the guest and userspace based on
that, and if that means evaluating 10 registers because there is a
terrible set of combinations (such as PAuth-like features), so be it.
We can always find ways to accelerate that.

	M.

-- 
Without deviation from the norm, progress is not possible.


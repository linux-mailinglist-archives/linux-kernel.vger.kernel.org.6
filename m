Return-Path: <linux-kernel+bounces-560222-lists+linux-kernel=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from sv.mirrors.kernel.org (sv.mirrors.kernel.org [139.178.88.99])
	by mail.lfdr.de (Postfix) with ESMTPS id E46CBA5FF82
	for <lists+linux-kernel@lfdr.de>; Thu, 13 Mar 2025 19:39:59 +0100 (CET)
Received: from smtp.subspace.kernel.org (relay.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-ECDSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by sv.mirrors.kernel.org (Postfix) with ESMTPS id 26C9A3B259E
	for <lists+linux-kernel@lfdr.de>; Thu, 13 Mar 2025 18:39:47 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 49D0C1EFF9D;
	Thu, 13 Mar 2025 18:39:52 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="crRHUmJs"
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 89AA215539A;
	Thu, 13 Mar 2025 18:39:51 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1741891191; cv=none; b=YfzAYLU7QlzDgqqXZWeYHPXzpj/9UtpAe36KzE+sB9kKgb2FZ3thb6h4anLJsd0K4l7JDSXjXG9pGA42H6JCvVO5IbuiNDP8BUKdTa4BXusrWePqEkUKTSCHQDI5f+7iQKd3McZhaGchb73qsztUBByZowuI0Yy9ygzPSn36EG4=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1741891191; c=relaxed/simple;
	bh=kIkQaPZ9LaF/0ujXnF4WzyuxIHtkF7tmzmaoCMQRocI=;
	h=Date:Message-ID:From:To:Cc:Subject:In-Reply-To:References:
	 MIME-Version:Content-Type; b=AdxFHDEuI3tXl0hQAv4PNZjBu1ZDYhOMGnFsHmadNUef3f3ry8FfpUREg83W2tt4X+LL+IOlSMoCRGmFvI41DEc1/Eve/8+lvpJ1Pc1FecC4uZhM5weNKC60iykFr/WgNocvl2zWvtfqaqw6WR1+/6aE6nS9u4ej2W0s5O0ghGo=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=crRHUmJs; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 05F44C4CEDD;
	Thu, 13 Mar 2025 18:39:51 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1741891191;
	bh=kIkQaPZ9LaF/0ujXnF4WzyuxIHtkF7tmzmaoCMQRocI=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=crRHUmJsyyTm/0gxcFpH38mFYe/K37F23Wur1AA6SNOOMMtc4LdvyUwYEJeKqQy+d
	 fzMFCs1gw4esrxCVrZcbUPnXo8lq6e2l/3KLmBAD3EOqkPT6CkBxbRpBV5UwUpBWJm
	 wgK3VoxyTdooHwjDGgEGoDJU2f+nQclqw3isCJr6O/kdb2FrqKvcx0xkxlZvoGZ4xA
	 niBNKasEtGGfBY9GMIDp6iTdzNSeu3WujgBCXYQWpDy1em0XOLfrsXeWFO12XSraIf
	 F5HVNTSiNVJ3zt0IP6FLkq8xvfsck5K6n73RoocpCNci6rnPl02y2gfvO7J/yRGIbo
	 irPCvOhLakY8w==
Received: from sofa.misterjones.org ([185.219.108.64] helo=goblin-girl.misterjones.org)
	by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	(Exim 4.95)
	(envelope-from <maz@kernel.org>)
	id 1tsnTA-00DKDm-RA;
	Thu, 13 Mar 2025 18:39:48 +0000
Date: Thu, 13 Mar 2025 18:39:48 +0000
Message-ID: <86frjgojuz.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: =?UTF-8?B?TWlrb8WCYWo=?= Lenczewski <miko.lenczewski@arm.com>
Cc: ryan.roberts@arm.com,
	suzuki.poulose@arm.com,
	yang@os.amperecomputing.com,
	corbet@lwn.net,
	catalin.marinas@arm.com,
	will@kernel.org,
	jean-philippe@linaro.org,
	robin.murphy@arm.com,
	joro@8bytes.org,
	akpm@linux-foundation.org,
	mark.rutland@arm.com,
	joey.gouly@arm.com,
	james.morse@arm.com,
	broonie@kernel.org,
	anshuman.khandual@arm.com,
	oliver.upton@linux.dev,
	ioworker0@gmail.com,
	baohua@kernel.org,
	david@redhat.com,
	jgg@ziepe.ca,
	shameerali.kolothum.thodi@huawei.com,
	nicolinc@nvidia.com,
	mshavit@google.com,
	jsnitsel@redhat.com,
	smostafa@google.com,
	linux-doc@vger.kernel.org,
	linux-kernel@vger.kernel.org,
	linux-arm-kernel@lists.infradead.org,
	iommu@lists.linux.dev
Subject: Re: [PATCH v3 1/3] arm64: Add BBM Level 2 cpu feature
In-Reply-To: <20250313182026.GC40525@mazurka.cambridge.arm.com>
References: <20250313104111.24196-2-miko.lenczewski@arm.com>
	<20250313104111.24196-3-miko.lenczewski@arm.com>
	<86ikocomvd.wl-maz@kernel.org>
	<20250313182026.GC40525@mazurka.cambridge.arm.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/29.4
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: miko.lenczewski@arm.com, ryan.roberts@arm.com, suzuki.poulose@arm.com, yang@os.amperecomputing.com, corbet@lwn.net, catalin.marinas@arm.com, will@kernel.org, jean-philippe@linaro.org, robin.murphy@arm.com, joro@8bytes.org, akpm@linux-foundation.org, mark.rutland@arm.com, joey.gouly@arm.com, james.morse@arm.com, broonie@kernel.org, anshuman.khandual@arm.com, oliver.upton@linux.dev, ioworker0@gmail.com, baohua@kernel.org, david@redhat.com, jgg@ziepe.ca, shameerali.kolothum.thodi@huawei.com, nicolinc@nvidia.com, mshavit@google.com, jsnitsel@redhat.com, smostafa@google.com, linux-doc@vger.kernel.org, linux-kernel@vger.kernel.org, linux-arm-kernel@lists.infradead.org, iommu@lists.linux.dev
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

On Thu, 13 Mar 2025 18:20:26 +0000,
Miko=C5=82aj Lenczewski <miko.lenczewski@arm.com> wrote:
>=20
> On Thu, Mar 13, 2025 at 05:34:46PM +0000, Marc Zyngier wrote:
> > On Thu, 13 Mar 2025 10:41:10 +0000,
> > Miko=C5=82aj Lenczewski <miko.lenczewski@arm.com> wrote:
> > >=20
> > > diff --git a/arch/arm64/kernel/pi/idreg-override.c b/arch/arm64/kerne=
l/pi/idreg-override.c
> > > index c6b185b885f7..9728faa10390 100644
> > > --- a/arch/arm64/kernel/pi/idreg-override.c
> > > +++ b/arch/arm64/kernel/pi/idreg-override.c
> > > @@ -209,6 +209,7 @@ static const struct ftr_set_desc sw_features __pr=
el64_initconst =3D {
> > >  		FIELD("nokaslr", ARM64_SW_FEATURE_OVERRIDE_NOKASLR, NULL),
> > >  		FIELD("hvhe", ARM64_SW_FEATURE_OVERRIDE_HVHE, hvhe_filter),
> > >  		FIELD("rodataoff", ARM64_SW_FEATURE_OVERRIDE_RODATA_OFF, NULL),
> > > +		FIELD("nobbml2", ARM64_SW_FEATURE_OVERRIDE_NOBBML2, NULL),
> > >  		{}
> > >  	},
> > >  };
> > > @@ -246,6 +247,7 @@ static const struct {
> > >  	{ "rodata=3Doff",			"arm64_sw.rodataoff=3D1" },
> > >  	{ "arm64.nolva",		"id_aa64mmfr2.varange=3D0" },
> > >  	{ "arm64.no32bit_el0",		"id_aa64pfr0.el0=3D1" },
> > > +	{ "arm64.nobbml2",		"arm64_sw.nobbml2=3D1" },
> >=20
> > Why is that a SW feature? This looks very much like a HW feature to
> > me, and you should instead mask out ID_AA64MMFR2_EL1.BBM, and be done
> > with it. Something like:
> >=20
> > diff --git a/arch/arm64/kernel/pi/idreg-override.c b/arch/arm64/kernel/=
pi/idreg-override.c
> > index c6b185b885f70..803a0c99f7b46 100644
> > --- a/arch/arm64/kernel/pi/idreg-override.c
> > +++ b/arch/arm64/kernel/pi/idreg-override.c
> > @@ -102,6 +102,7 @@ static const struct ftr_set_desc mmfr2 __prel64_ini=
tconst =3D {
> >  	.override	=3D &id_aa64mmfr2_override,
> >  	.fields		=3D {
> >  		FIELD("varange", ID_AA64MMFR2_EL1_VARange_SHIFT, mmfr2_varange_filte=
r),
> > +		FIELD("bbm", ID_AA64MMFR2_EL1_BBM_SHIFT, NULL),
> >  		{}
> >  	},
> >  };
> > @@ -246,6 +247,7 @@ static const struct {
> >  	{ "rodata=3Doff",			"arm64_sw.rodataoff=3D1" },
> >  	{ "arm64.nolva",		"id_aa64mmfr2.varange=3D0" },
> >  	{ "arm64.no32bit_el0",		"id_aa64pfr0.el0=3D1" },
> > +	{ "arm64.nobbml2",		"id_aa64mmfr2.bbm=3D0" },
> >  };
> > =20
> >  static int __init parse_hexdigit(const char *p, u64 *v)
> >=20
> >=20
> > Thanks,
> >=20
> > 	M.
> >=20
> > --=20
> > Without deviation from the norm, progress is not possible.
>=20
> Thanks for the review.
>=20
> I think part of this confusion is due to me not including a changelog
> (definitely something for the next respin!), but the discussion this
> change is based on is found here:
>=20
> https://lore.kernel.org/all/b46dc626-edc9-4d20-99d2-6cd08a01346c@os.amper=
ecomputing.com/
>=20
> Essentially, this is a SW feature because we do not check the
> id_aa64mmfr2.bbm register as part of the has_bbml2_noabort() cpucap
> matches filter. This is because certain hardware implementations
> do not actually declare bbml2 via the hardware feature register, despite
> implementing our bbml2_noabort feature, and certain hypervisor setups
> might result in issues so we want to have an override to allow
> potentially disabling the feature for generic kernels.

I replied to Ryan on the same subject: not advertising a feature that
is actually supported is very much an erratum, and we should not
conflate feature control of an architecture feature (which is what the
ID override horror is doing) with implementation-specific workarounds.

Thanks,

	M.

--=20
Without deviation from the norm, progress is not possible.


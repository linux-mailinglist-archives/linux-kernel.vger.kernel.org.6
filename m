Return-Path: <linux-kernel+bounces-294049-lists+linux-kernel=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from sv.mirrors.kernel.org (sv.mirrors.kernel.org [139.178.88.99])
	by mail.lfdr.de (Postfix) with ESMTPS id D0941958840
	for <lists+linux-kernel@lfdr.de>; Tue, 20 Aug 2024 15:49:16 +0200 (CEST)
Received: from smtp.subspace.kernel.org (wormhole.subspace.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by sv.mirrors.kernel.org (Postfix) with ESMTPS id 425C4283D6C
	for <lists+linux-kernel@lfdr.de>; Tue, 20 Aug 2024 13:49:15 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 75283190670;
	Tue, 20 Aug 2024 13:49:08 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="evk4h2E1"
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id A72C4189F3F;
	Tue, 20 Aug 2024 13:49:07 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1724161747; cv=none; b=cVtiTzK4o1J9icWjYzNj90fuQdNhfaaXzy8USznFn3TOP+fZX+r6kH1IJJxqr19SCsciFFf5KbY4SlcU/GVxEQp6F8Ti82Yha2z9tFkiBiOCY+znAgrUuzoS8HsWgFKFR+4tDyOhFHiT0dcXs7i16Q3QeERJEome8iTlFJaQTuM=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1724161747; c=relaxed/simple;
	bh=bhRwn+mVa1bt+TlSFVqIGGL3160ePN1rMaL5tku4pr0=;
	h=Date:Message-ID:From:To:Cc:Subject:In-Reply-To:References:
	 MIME-Version:Content-Type; b=YVa0IiqpX8E3K4kjFjaydhBGgoSZT6PChgARnMsBnAMB6makSDqboc0Z2F4e60FgrckJwK9jM6PyPYaKGN8FTKLnpBnpilSesX/7Z1jdv7+weHuu3fAlIwACj4jScAadHnNxr9JilRl82Og/etzExtytieMc7lfaFOkSG3NbyEg=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=evk4h2E1; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 1D767C4AF0E;
	Tue, 20 Aug 2024 13:49:07 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1724161747;
	bh=bhRwn+mVa1bt+TlSFVqIGGL3160ePN1rMaL5tku4pr0=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=evk4h2E1nkNef2/bTxkH/5JMSYGg6VWdjgJKeMbMaEdaivq7L6N9i6SzQvDzfsT4k
	 S603bEwXO2pLPUWy3li5pE3fDcTyNarc6t9465yvDNDRGleiEs2HT7gjCb+wwNwFsX
	 KpwMxYbIoqO2Y0j4doscuk6dpWE0K2BfUrJkWeXUEh20CTPt0PjnQSBb0X8Htr6dnJ
	 aNkYd6OGL/QrUYns3ADV9Qci+vCzwOFCkWBLnCrYyUx2VQEYjMibSMARxg/Fr+KsAH
	 lFBrwCMmhjUNy8RlvUawRl8J/DKJ5P11GO9NYV/23fBUC8AGPeGA6EpOd/0nH4T9wf
	 eIxuanOzE8vxA==
Received: from sofa.misterjones.org ([185.219.108.64] helo=goblin-girl.misterjones.org)
	by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	(Exim 4.95)
	(envelope-from <maz@kernel.org>)
	id 1sgPEP-005Hv4-2L;
	Tue, 20 Aug 2024 14:49:05 +0100
Date: Tue, 20 Aug 2024 14:49:04 +0100
Message-ID: <86seuzxq27.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Sebastian Ene <sebastianene@google.com>
Cc: akpm@linux-foundation.org,
	alexghiti@rivosinc.com,
	ankita@nvidia.com,
	ardb@kernel.org,
	catalin.marinas@arm.com,
	christophe.leroy@csgroup.eu,
	james.morse@arm.com,
	vdonnefort@google.com,
	mark.rutland@arm.com,
	oliver.upton@linux.dev,
	rananta@google.com,
	ryan.roberts@arm.com,
	shahuang@redhat.com,
	suzuki.poulose@arm.com,
	will@kernel.org,
	yuzenghui@huawei.com,
	kvmarm@lists.linux.dev,
	linux-arm-kernel@lists.infradead.org,
	linux-kernel@vger.kernel.org,
	kernel-team@android.com
Subject: Re: [PATCH v8 3/6] arm64: ptdump: Use the mask from the state structure
In-Reply-To: <20240816123906.3683425-4-sebastianene@google.com>
References: <20240816123906.3683425-1-sebastianene@google.com>
	<20240816123906.3683425-4-sebastianene@google.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/29.4
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: sebastianene@google.com, akpm@linux-foundation.org, alexghiti@rivosinc.com, ankita@nvidia.com, ardb@kernel.org, catalin.marinas@arm.com, christophe.leroy@csgroup.eu, james.morse@arm.com, vdonnefort@google.com, mark.rutland@arm.com, oliver.upton@linux.dev, rananta@google.com, ryan.roberts@arm.com, shahuang@redhat.com, suzuki.poulose@arm.com, will@kernel.org, yuzenghui@huawei.com, kvmarm@lists.linux.dev, linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org, kernel-team@android.com
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

On Fri, 16 Aug 2024 13:39:03 +0100,
Sebastian Ene <sebastianene@google.com> wrote:
> 
> Printing the descriptor attributes requires accessing a mask which has a
> different set of attributes for stage-2. In preparation for adding support
> for the stage-2 pagetables dumping, use the mask from the local context
> and not from the globally defined pg_level array. Store a pointer to
> the pg_level array in the ptdump state structure. This will allow us to
> extract the mask which is wrapped in the pg_level array and use it for
> descriptor parsing in the note_page.
> 
> Signed-off-by: Sebastian Ene <sebastianene@google.com>
> ---
>  arch/arm64/include/asm/ptdump.h |  1 +
>  arch/arm64/mm/ptdump.c          | 13 ++++++++-----
>  2 files changed, 9 insertions(+), 5 deletions(-)
> 
> diff --git a/arch/arm64/include/asm/ptdump.h b/arch/arm64/include/asm/ptdump.h
> index bd5d3ee3e8dc..71a7ed01153a 100644
> --- a/arch/arm64/include/asm/ptdump.h
> +++ b/arch/arm64/include/asm/ptdump.h
> @@ -44,6 +44,7 @@ struct ptdump_pg_level {
>   */
>  struct ptdump_pg_state {
>  	struct ptdump_state ptdump;
> +	struct ptdump_pg_level *pg_level;
>  	struct seq_file *seq;
>  	const struct addr_marker *marker;
>  	const struct mm_struct *mm;
> diff --git a/arch/arm64/mm/ptdump.c b/arch/arm64/mm/ptdump.c
> index 404751fd30fe..ca53ef274a8b 100644
> --- a/arch/arm64/mm/ptdump.c
> +++ b/arch/arm64/mm/ptdump.c
> @@ -117,7 +117,7 @@ static const struct ptdump_prot_bits pte_bits[] = {
>  	}
>  };
>  
> -static struct ptdump_pg_level pg_level[] __ro_after_init = {
> +static struct ptdump_pg_level kernel_pg_levels[] __ro_after_init = {

Do you actually need this sort of renaming? Given that it is static,
this looks like some slightly abusive repainting which isn't warranted
here.

I also didn't understand the commit message: you're not tracking any
mask here, but a page table level. You are also not using it for
anything yet, see below.


>  	{ /* pgd */
>  		.name	= "PGD",
>  		.bits	= pte_bits,
> @@ -192,6 +192,7 @@ void note_page(struct ptdump_state *pt_st, unsigned long addr, int level,
>  	       u64 val)
>  {
>  	struct ptdump_pg_state *st = container_of(pt_st, struct ptdump_pg_state, ptdump);
> +	struct ptdump_pg_level *pg_level = st->pg_level;

This is what I mean. What is this pg_level used for?

>  	static const char units[] = "KMGTPE";
>  	u64 prot = 0;
>  
> @@ -262,6 +263,7 @@ void ptdump_walk(struct seq_file *s, struct ptdump_info *info)
>  		.seq = s,
>  		.marker = info->markers,
>  		.mm = info->mm,
> +		.pg_level = &kernel_pg_levels[0],
>  		.level = -1,
>  		.ptdump = {
>  			.note_page = note_page,
> @@ -279,10 +281,10 @@ static void __init ptdump_initialize(void)
>  {
>  	unsigned i, j;
>  
> -	for (i = 0; i < ARRAY_SIZE(pg_level); i++)
> -		if (pg_level[i].bits)
> -			for (j = 0; j < pg_level[i].num; j++)
> -				pg_level[i].mask |= pg_level[i].bits[j].mask;
> +	for (i = 0; i < ARRAY_SIZE(kernel_pg_levels); i++)
> +		if (kernel_pg_levels[i].bits)
> +			for (j = 0; j < kernel_pg_levels[i].num; j++)
> +				kernel_pg_levels[i].mask |= kernel_pg_levels[i].bits[j].mask;
>  }
>  
>  static struct ptdump_info kernel_ptdump_info __ro_after_init = {
> @@ -297,6 +299,7 @@ bool ptdump_check_wx(void)
>  			{ 0, NULL},
>  			{ -1, NULL},
>  		},
> +		.pg_level = &kernel_pg_levels[0],
>  		.level = -1,
>  		.check_wx = true,
>  		.ptdump = {

Thanks,

	M.

-- 
Without deviation from the norm, progress is not possible.

